/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visual.admin;

import excepciones.UsuarioNoEncontradoException;
import java.awt.Color;
import java.awt.Font;
import java.awt.font.TextAttribute;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import modelo.cursos.Curso;
import modelo.cursos.CursosFinalizados;
import modelo.instituto.Instituto;
import modelo.usuarios.Admin;
import modelo.usuarios.Alumno;
import modelo.usuarios.Docente;

/**
 *
 * @author user
 */
public class gestionCursos extends javax.swing.JFrame {

    /**
     * Creates new form gestionCursos
     */
    
    
    Admin admin;
    Instituto instituto;
    DefaultTableModel modeloTabla;
    DefaultTableModel modeloTabla2;
    
    public gestionCursos(Admin admin, Instituto instituto) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.admin = admin;
        this.instituto = instituto;
        modeloTabla = (DefaultTableModel) tableCursos.getModel();
        modeloTabla2 = (DefaultTableModel) tableAlumnos.getModel();
        cargarTabla(modeloTabla);
        cargarComboBoxDocentes();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblRegresar = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jComboBoxDocente = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        lblResetLista = new javax.swing.JLabel();
        btnVerNotas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCursos = new javax.swing.JTable();
        lblTitulo1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAlumnos = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel9.setBackground(new java.awt.Color(0, 51, 102));

        jPanel10.setBackground(new java.awt.Color(0, 51, 102));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );

        lblTitulo.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(240, 240, 240));
        lblTitulo.setText("Información de Cursos");

        lblRegresar.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        lblRegresar.setForeground(new java.awt.Color(240, 240, 240));
        lblRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visual/imagenes/volverAtras2.png"))); // NOI18N
        lblRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresarMouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 67, 135));

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Descripción:");

        txtDescripcion.setBackground(new java.awt.Color(0, 67, 135));
        txtDescripcion.setFont(new java.awt.Font("Lucida Sans", 0, 11)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(240, 240, 240));
        txtDescripcion.setBorder(null);
        txtDescripcion.setCaretColor(new java.awt.Color(240, 240, 240));
        txtDescripcion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel8.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Docente:");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visual/imagenes/buscarUsuario2.png"))); // NOI18N

        btnBuscar.setBackground(new java.awt.Color(0, 51, 102));
        btnBuscar.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("BUSCAR");
        btnBuscar.setBorder(null);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.setFocusable(false);
        btnBuscar.setOpaque(true);
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
        });
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jComboBoxDocente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2)
                .addGap(68, 68, 68))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jComboBoxDocente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jPanel7.setBackground(new java.awt.Color(0, 67, 135));

        lblResetLista.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        lblResetLista.setForeground(new java.awt.Color(255, 255, 255));
        lblResetLista.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblResetLista.setText("Actualizar listados");
        lblResetLista.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblResetLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblResetListaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblResetListaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblResetListaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblResetLista)
                .addGap(18, 18, 18))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblResetLista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnVerNotas.setBackground(new java.awt.Color(0, 67, 135));
        btnVerNotas.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        btnVerNotas.setForeground(new java.awt.Color(255, 255, 255));
        btnVerNotas.setText("VER LISTADO DE ALUMNOS ->");
        btnVerNotas.setBorder(null);
        btnVerNotas.setContentAreaFilled(false);
        btnVerNotas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVerNotas.setFocusable(false);
        btnVerNotas.setOpaque(true);
        btnVerNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVerNotasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVerNotasMouseExited(evt);
            }
        });
        btnVerNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerNotasActionPerformed(evt);
            }
        });

        tableCursos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 1, true));
        tableCursos.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        tableCursos.setForeground(new java.awt.Color(0, 51, 102));
        tableCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Docente", "Descripcion", "Estado", "Correlativa 1", "Correlativa 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCursos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableCursos.setGridColor(new java.awt.Color(255, 255, 255));
        tableCursos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableCursos.getTableHeader().setResizingAllowed(false);
        tableCursos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableCursos);
        if (tableCursos.getColumnModel().getColumnCount() > 0) {
            tableCursos.getColumnModel().getColumn(0).setResizable(false);
            tableCursos.getColumnModel().getColumn(1).setResizable(false);
            tableCursos.getColumnModel().getColumn(2).setResizable(false);
            tableCursos.getColumnModel().getColumn(3).setResizable(false);
            tableCursos.getColumnModel().getColumn(4).setResizable(false);
        }

        lblTitulo1.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblTitulo1.setForeground(new java.awt.Color(240, 240, 240));
        lblTitulo1.setText("Listado de alumnos");

        tableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alumno", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableAlumnos);
        if (tableAlumnos.getColumnModel().getColumnCount() > 0) {
            tableAlumnos.getColumnModel().getColumn(0).setResizable(false);
            tableAlumnos.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel8.setBackground(new java.awt.Color(0, 67, 135));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblRegresar)
                        .addGap(282, 282, 282)
                        .addComponent(lblTitulo))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                            .addComponent(btnVerNotas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 31, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(lblTitulo1)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRegresar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTitulo1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnVerNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresarMouseClicked
        dispose();
        visualAdmin vA = new visualAdmin(this.admin, this.instituto);
        vA.jTabbedPane.setSelectedIndex(0);
        vA.setVisible(true);
    }//GEN-LAST:event_lblRegresarMouseClicked

    private void lblResetListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblResetListaMouseClicked
        modeloTabla.setRowCount(0);
        modeloTabla2.setRowCount(0);
        cargarTabla(modeloTabla);
    }//GEN-LAST:event_lblResetListaMouseClicked

    private void lblResetListaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblResetListaMouseEntered
        setUnderline(lblResetLista, true);
    }//GEN-LAST:event_lblResetListaMouseEntered

    private void lblResetListaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblResetListaMouseExited
        setUnderline(lblResetLista, false);
    }//GEN-LAST:event_lblResetListaMouseExited

    private void btnVerNotasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerNotasMouseEntered
        btnVerNotas.setBackground(new Color(0,56,110));
    }//GEN-LAST:event_btnVerNotasMouseEntered

    private void btnVerNotasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerNotasMouseExited
        btnVerNotas.setBackground(new Color(0,67,135));
    }//GEN-LAST:event_btnVerNotasMouseExited

    private void btnVerNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerNotasActionPerformed

        int filaSeleccionada = obtenerFilaSeleccionada();
        String descripcion = modeloTabla.getValueAt(filaSeleccionada, 1).toString().toLowerCase();
        
        ArrayList<Curso> listaCursos = instituto.getCursos();
        
        for (Curso curso : listaCursos) {
            
            if(curso.getDescripcion().toLowerCase().equals(descripcion))
            {
                ArrayList<Alumno> listadoAlumnos = curso.getAlumnos(); //acá estamos work
                cargarTablaAlumnos(listadoAlumnos, curso);
            }
        }

    }//GEN-LAST:event_btnVerNotasActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        modeloTabla.setRowCount(0);

        String descripcion = txtDescripcion.getText().toLowerCase();
        String nombreDocente = jComboBoxDocente.getSelectedItem().toString();
        
        Docente doc = verificarNombreDocente(nombreDocente);
        
        try{
            cargarTablaCursoPorBusqueda(doc, descripcion);
        }
        catch (UsuarioNoEncontradoException e)
        {
            new JDialogError(this, false, e);
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        btnBuscar.setBackground(new Color(0,51,102));
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        btnBuscar.setBackground(new Color(0,56,110));
    }//GEN-LAST:event_btnBuscarMouseEntered

    private static void setUnderline(JLabel label, boolean underline) {
        Font font = label.getFont();
        Map<TextAttribute, Object> attributes = new HashMap<>(font.getAttributes());
        attributes.put(TextAttribute.UNDERLINE, underline ? TextAttribute.UNDERLINE_ON : null);
        label.setFont(font.deriveFont(attributes));
    }
    
    public void cargarTabla(DefaultTableModel modeloTabla)
    {
        ArrayList<Curso> listaCursos = instituto.getCursos();
        
        // Agregar filas al modelo de tabla a partir de los datos de los docentes
        for (Curso curso : listaCursos) {
            
                if(curso.getRequisitos().size() == 2){
                    Object[] fila = {curso.getDocente().getNombreCompleto(), curso.getDescripcion(), curso.getEstado(), curso.getRequisitos().get(0).getDescripcion(), curso.getRequisitos().get(1).getDescripcion()};
                    modeloTabla.addRow(fila);
                }
                    else if(curso.getRequisitos().size() == 1){
                        Object[] fila = {curso.getDocente().getNombreCompleto(), curso.getDescripcion(), curso.getEstado(), curso.getRequisitos().get(0).getDescripcion()};
                        modeloTabla.addRow(fila);
                    }
                        else if(curso.getRequisitos().isEmpty()){
                            Object[] fila = {curso.getDocente().getNombreCompleto(), curso.getDescripcion(), curso.getEstado()};
                            modeloTabla.addRow(fila);
                        }
        }
        
    }
    
    public void cargarTablaAlumnos(ArrayList<Alumno> listadoAlumnos, Curso curso)
    {
        modeloTabla2.setRowCount(0);
        if(listadoAlumnos!= null)
        {
            for(Alumno alum : listadoAlumnos)
            {
                String estado = getEstadoCurso(alum, curso);
                Object[] fila = {alum.getNombreCompleto(), estado};
                modeloTabla2.addRow(fila);
            }
        }
    }
    
    public String getEstadoCurso(Alumno alum, Curso curso)
    {
        String estado = null;
        
        if(curso.getEstado().equals("propuesto"))
        {
            estado = "Cursando";
        }
        
        else if  (curso.getEstado().equals("cerrado"))
        {
            estado = "Curso cerrado";
        }
        
        else if(curso.getEstado().equals("habilitado"))
        {
            estado = "Cursando";
        }
        
        else if (curso.getEstado().equals("finalizado"))
        {
            ArrayList<CursosFinalizados> cursosFinalizados = alum.getCursosFinalizados();
            for(CursosFinalizados cf : cursosFinalizados)
            {
                if(cf.getCurso().getDescripcion().toLowerCase().equals(curso.getDescripcion().toLowerCase()))
                {
                    estado = cf.getEstado();
                }
            }
        }
        return estado;
    }
    
    private int obtenerFilaSeleccionada() {
        return tableCursos.getSelectedRow();
    }
    
  
    
    
    private void cargarTablaCursoPorBusqueda(Docente doc, String descripcion) throws UsuarioNoEncontradoException
    {
        ArrayList<Curso> listadoCursos = instituto.getCursos();
        int contadorFilas=0;
        
        for(Curso curso : listadoCursos)
        {
            if(curso.getDocente().equals(doc) || curso.getDescripcion().toLowerCase().equals(descripcion))
            {
                if(curso.getRequisitos().size() == 2){
                    Object[] fila = {curso.getDocente().getNombreCompleto(), curso.getDescripcion(), curso.getEstado(), curso.getRequisitos().get(0).getDescripcion(), curso.getRequisitos().get(1).getDescripcion()};
                    modeloTabla.addRow(fila);
                }
                    else if(curso.getRequisitos().size() == 1){
                        Object[] fila = {curso.getDocente().getNombreCompleto(), curso.getDescripcion(), curso.getEstado(), curso.getRequisitos().get(0).getDescripcion()};
                        modeloTabla.addRow(fila);
                    }
                        else if(curso.getRequisitos().isEmpty()){
                            Object[] fila = {curso.getDocente().getNombreCompleto(), curso.getDescripcion(), curso.getEstado()};
                            modeloTabla.addRow(fila);
                        }
            }
        }
        
        if(contadorFilas == 0)
        {
            throw new UsuarioNoEncontradoException("No se encontraron cursos.");
        }
    }
    
    private Docente verificarNombreDocente(String nombreSeleccionado)
    {
        Docente docente = null;
        
        ArrayList<Docente> docentes = instituto.getDocentes();
        for(Docente doc : docentes)
        {
            String nombreCompleto = doc.getNombreCompleto();
            nombreCompleto.toLowerCase();
            nombreCompleto.trim();
            nombreSeleccionado.toLowerCase();
            nombreSeleccionado.trim();
            if(nombreSeleccionado.equals(nombreCompleto))
            {
                docente = doc;
            }
        }
        
        return docente;
    }
    
    public void cargarComboBoxDocentes()
    {
        ArrayList<Docente> listaDocentes = instituto.getDocentes();
        
        for (Docente docente : listaDocentes) {
            if(!docente.isBloqueado())
            {
                jComboBoxDocente.addItem(docente.toString());
            }
    }
    }
    
    public void serializarAdmin()
    {
        try 
        {
            FileOutputStream archivoSalida = new FileOutputStream("admin_serializado.dat");
            ObjectOutputStream objetoSalida = new ObjectOutputStream(archivoSalida);
            objetoSalida.writeObject(this.admin);
            objetoSalida.close();
            archivoSalida.close();
        }
        catch (IOException e){ 
            e.printStackTrace();
        }
    }
     
    public void serializarInstituto()
    {
        try {
            FileOutputStream archivoSalida = new FileOutputStream("instituto_serializados.dat");
            ObjectOutputStream objetoSalida = new ObjectOutputStream(archivoSalida);
            objetoSalida.writeObject(instituto);
            objetoSalida.close();
            archivoSalida.close();
        }
        catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnVerNotas;
    private javax.swing.JComboBox<String> jComboBoxDocente;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblRegresar;
    private javax.swing.JLabel lblResetLista;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTitulo1;
    private javax.swing.JTable tableAlumnos;
    private javax.swing.JTable tableCursos;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
