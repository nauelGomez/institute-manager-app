/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visual.docente;

import java.awt.Font;
import java.awt.font.TextAttribute;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import modelo.cursos.Curso;
import modelo.instituto.Instituto;
import modelo.usuarios.Docente;

/**
 *
 * @author user
 */
public class cursosPropuestos extends javax.swing.JFrame {
    Docente userDocente;
    Instituto instituto;
    
    DefaultTableModel modeloTabla;
    /**
     * Creates new form cursosPropuestos
     * @param docente conectado
     * @param instituto icet
     */
    public cursosPropuestos(Docente docente, Instituto instituto) {
      initComponents();
      this.setLocationRelativeTo(null);
      this.userDocente = docente;
      this.instituto = instituto;
      
      modeloTabla = (DefaultTableModel) tableCursosPropuestos.getModel();
      cargarTabla(modeloTabla);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        lblRegresar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCursosPropuestos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel10.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Cursos propuestos");

        lblRegresar.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        lblRegresar.setForeground(new java.awt.Color(240, 240, 240));
        lblRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visual/imagenes/volverAtras2.png"))); // NOI18N
        lblRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresarMouseClicked(evt);
            }
        });

        tableCursosPropuestos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 1, true));
        tableCursosPropuestos.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        tableCursosPropuestos.setForeground(new java.awt.Color(0, 51, 102));
        tableCursosPropuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "DescripciÃ³n", "Tope Alumnos", "Correlativa 1", "Correlativa 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCursosPropuestos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableCursosPropuestos.setGridColor(new java.awt.Color(255, 255, 255));
        tableCursosPropuestos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableCursosPropuestos.getTableHeader().setResizingAllowed(false);
        tableCursosPropuestos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableCursosPropuestos);
        if (tableCursosPropuestos.getColumnModel().getColumnCount() > 0) {
            tableCursosPropuestos.getColumnModel().getColumn(0).setResizable(false);
            tableCursosPropuestos.getColumnModel().getColumn(1).setResizable(false);
            tableCursosPropuestos.getColumnModel().getColumn(2).setResizable(false);
            tableCursosPropuestos.getColumnModel().getColumn(3).setResizable(false);
            tableCursosPropuestos.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblRegresar)
                        .addGap(432, 432, 432)
                        .addComponent(jLabel10)
                        .addGap(0, 463, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRegresar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresarMouseClicked
        this.setVisible(false);
        new visualDocente(this.userDocente,this.instituto).setVisible(true);
    }//GEN-LAST:event_lblRegresarMouseClicked

    
    public void cargarTabla(DefaultTableModel modeloTabla)
    {
        ArrayList<Curso> cursos = instituto.getCursos();
        ArrayList<Curso> cursosMostrar = new ArrayList();

        //mostrar cursos con estado PROPUESTO y que ademas el profesor concuerde ID
        for (Curso curso : cursos) {
            if(this.userDocente.getDni() == curso.getDocente().getDni() && curso.getEstado().equals("propuesto")){
             cursosMostrar.add(curso);
            }
        }
        for(Curso curso : cursosMostrar)
        {
           if(curso.getRequisitos().size() == 2){
                    Object[] fila = {curso.getId(),curso.getDescripcion(),curso.getTopeAlumnos(), curso.getRequisitos().get(0).getDescripcion(), curso.getRequisitos().get(1).getDescripcion()};
                    modeloTabla.addRow(fila);
                }
                    else if(curso.getRequisitos().size() == 1){
                        Object[] fila = {curso.getId(),curso.getDescripcion(),curso.getTopeAlumnos(), curso.getRequisitos().get(0).getDescripcion()};
                        modeloTabla.addRow(fila);
                    }
                        else if(curso.getRequisitos().isEmpty()){
                            Object[] fila = {curso.getId(),curso.getDescripcion(),curso.getTopeAlumnos()};
                            modeloTabla.addRow(fila);
                        }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRegresar;
    private javax.swing.JTable tableCursosPropuestos;
    // End of variables declaration//GEN-END:variables

 private static void setUnderline(JLabel label, boolean underline) {
        Font font = label.getFont();
        Map<TextAttribute, Object> attributes = new HashMap<>(font.getAttributes());
        attributes.put(TextAttribute.UNDERLINE, underline ? TextAttribute.UNDERLINE_ON : null);
        label.setFont(font.deriveFont(attributes));
    }
}

